spring.security.user.name = ytech
spring.security.user.password = 12345

#default user name: User
#password will be generated on console after startup of application.


#Spring security is powerful and highly customizable authentication and authorization framework. 
#dependency required: spring-boot-stater-security
#Once above dependency added automatically all paths of application will get secured. 
#Spring security provides out of the box features to handle common security attacks like CSRF (Cross-Site Request Forgery), 
#COR's (Cross-Origin Resource Sharing). It also has good integration with security standards like JWT, OAUTH2 etc. 

CSRF stands for Cross-Site Request Forgery. It's a type of attack where a malicious website or email tricks a user's web browser into making unauthorized requests to a different website where the user is authenticated. This can lead to actions being performed on behalf of the user without their consent.

To prevent CSRF attacks, web applications often use techniques such as CSRF tokens, which are unique, random tokens generated for each session and included in forms or requests. The server verifies these tokens to ensure that the request originated from the legitimate user and not from a malicious source. Additionally, setting secure and HTTP-only flags for cookies can help mitigate CSRF attacks. 